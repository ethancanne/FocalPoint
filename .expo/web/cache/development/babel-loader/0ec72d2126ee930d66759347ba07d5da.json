{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { RoundedButton } from \"../../components/RoundedButton\";\nimport { ButtonTypes } from \"../../utils/constants/ButtonTypes\";\nimport { styles } from \"./styles\";\nimport { History } from \"../../components/History\";\nexport var Home = function Home(_ref) {\n  var addSubject = _ref.addSubject,\n      focusHistory = _ref.focusHistory,\n      onClear = _ref.onClear;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      subject = _useState2[0],\n      setSubject = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.title\n  }, \"Focal Point\"), React.createElement(History, {\n    focusHistory: focusHistory,\n    onClear: onClear,\n    addSubject: addSubject\n  }), React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1,\n      zIndex: 1,\n      position: \"absolute\",\n      bottom: 0,\n      left: 0,\n      width: \"100%\"\n    },\n    behavior: 'position'\n  }, React.createElement(View, {\n    style: styles.inputView\n  }, React.createElement(TextInput, {\n    style: styles.focusTxtInput,\n    onChange: function onChange(_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      setSubject(nativeEvent.text);\n    },\n    value: subject\n  }), React.createElement(RoundedButton, {\n    title: \"Start\",\n    type: ButtonTypes.COMPLETE_BTN,\n    onPress: function onPress() {\n      addSubject(subject, 10);\n      setSubject(null);\n    }\n  }))), focusHistory.length ? React.createElement(View, {\n    style: styles.clearView\n  }, React.createElement(RoundedButton, {\n    title: \"Clear\",\n    type: ButtonTypes.CLEAR_BTN,\n    width: \"100%\",\n    shadow: false,\n    style: {\n      position: 'absolute',\n      top: 3\n    },\n    onPress: onClear\n  })) : React.createElement(React.Fragment, null));\n};","map":{"version":3,"sources":["/Users/ethancannelongo/Desktop/React Native/Focal Point/focalpoint/src/features/home/Home.js"],"names":["React","useState","useEffect","RoundedButton","ButtonTypes","styles","History","Home","addSubject","focusHistory","onClear","subject","setSubject","container","title","flex","zIndex","position","bottom","left","width","inputView","focusTxtInput","nativeEvent","text","COMPLETE_BTN","length","clearView","CLEAR_BTN","top"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;;;;AAaA,SAASC,aAAT;AACA,SAASC,WAAT;AACA,SAASC,MAAT;AACA,SAAQC,OAAR;AACA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA2C;AAAA,MAAxCC,UAAwC,QAAxCA,UAAwC;AAAA,MAA5BC,YAA4B,QAA5BA,YAA4B;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC7D,kBAA8BT,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ;AAApB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS;AAApB,mBADF,EAEE,oBAAC,OAAD;AAAS,IAAA,YAAY,EAAEL,YAAvB;AAAqC,IAAA,OAAO,EAAEC,OAA9C;AAAuD,IAAA,UAAU,EAAEF;AAAnE,IAFF,EAGE,oBAAC,oBAAD;AACE,IAAA,KAAK,EAAE;AAAEO,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE,CAAnB;AAAsBC,MAAAA,QAAQ,EAAE,UAAhC;AAA4CC,MAAAA,MAAM,EAAE,CAApD;AAAuDC,MAAAA,IAAI,EAAC,CAA5D;AAA+DC,MAAAA,KAAK,EAAE;AAAtE,KADT;AAEE,IAAA,QAAQ,EAAE;AAFZ,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACgB;AAApB,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEhB,MAAM,CAACiB,aADhB;AAEE,IAAA,QAAQ,EAAE,yBAAqB;AAAA,UAAlBC,WAAkB,SAAlBA,WAAkB;AAC7BX,MAAAA,UAAU,CAACW,WAAW,CAACC,IAAb,CAAV;AACD,KAJH;AAKE,IAAA,KAAK,EAAEb;AALT,IADF,EAQE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAEP,WAAW,CAACqB,YAFpB;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbjB,MAAAA,UAAU,CAACG,OAAD,EAAU,EAAV,CAAV;AACAC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AANH,IARF,CAHF,CAHF,EAwBGH,YAAY,CAACiB,MAAb,GACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACsB;AAApB,KACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,IAAI,EAAEvB,WAAW,CAACwB,SAFpB;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,MAAM,EAAE,KAJV;AAKE,IAAA,KAAK,EAAE;AAAEX,MAAAA,QAAQ,EAAE,UAAZ;AAAwBY,MAAAA,GAAG,EAAE;AAA7B,KALT;AAME,IAAA,OAAO,EAAEnB;AANX,IADF,CADD,GAWE,yCAnCL,CADF;AAuCD,CAzCM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  Text,\n  View,\n  TextInput,\n  Pressable,\n  KeyboardAvoidingView,\n  Keyboard,\n  Platform,\n  Alert\n} from 'react-native';\nimport { RoundedButton } from '../../components/RoundedButton';\nimport { ButtonTypes } from '../../utils/constants/ButtonTypes';\nimport { styles } from './styles';\nimport {History} from '../../components/History'\nexport const Home = ({ addSubject, focusHistory, onClear }) => {\n  const [subject, setSubject] = useState(null);\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Focal Point</Text>\n      <History focusHistory={focusHistory} onClear={onClear} addSubject={addSubject}/>\n      <KeyboardAvoidingView\n        style={{ flex: 1, zIndex: 1, position: \"absolute\", bottom: 0, left:0, width: \"100%\" }}\n        behavior={'position'}>\n        <View style={styles.inputView}>\n          <TextInput\n            style={styles.focusTxtInput}\n            onChange={({ nativeEvent }) => {\n              setSubject(nativeEvent.text);\n            }}\n            value={subject}\n          />\n          <RoundedButton\n            title=\"Start\"\n            type={ButtonTypes.COMPLETE_BTN}\n            onPress={() => {\n              addSubject(subject, 10);\n              setSubject(null)\n            }}\n          />\n        </View>\n      </KeyboardAvoidingView>\n      {focusHistory.length ?\n        <View style={styles.clearView}>\n          <RoundedButton\n            title=\"Clear\"\n            type={ButtonTypes.CLEAR_BTN}\n            width=\"100%\"\n            shadow={false}\n            style={{ position: 'absolute', top: 3 }}\n            onPress={onClear}\n          />\n        </View>\n       : <></>}\n    </View>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}