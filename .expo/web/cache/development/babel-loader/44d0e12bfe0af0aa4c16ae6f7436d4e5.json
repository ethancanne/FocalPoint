{"ast":null,"code":"import React, { useState, useEffect, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { RoundedButton } from \"../components/RoundedButton\";\nimport { ButtonTypes } from \"../utils/constants/ButtonTypes\";\nexport var Timing = function Timing(_ref) {\n  var onChangeTime = _ref.onChangeTime;\n  return React.createElement(View, {\n    style: styles.timingView\n  }, React.createElement(RoundedButton, {\n    width: 90,\n    height: 90,\n    type: ButtonTypes.NORMAL_BTN2,\n    title: \"10\",\n    style: {\n      marginLeft: 10,\n      marginRight: 10,\n      flex: 1\n    },\n    onPress: function onPress() {\n      onChangeTime(10);\n    },\n    textStyle: {\n      fontSize: 40\n    }\n  }), React.createElement(RoundedButton, {\n    width: 90,\n    height: 90,\n    type: ButtonTypes.NORMAL_BTN2,\n    title: \"15\",\n    style: {\n      marginLeft: 10,\n      marginRight: 10,\n      flex: 1\n    },\n    onPress: function onPress() {\n      onChangeTime(15);\n    },\n    textStyle: {\n      fontSize: 40\n    }\n  }), React.createElement(RoundedButton, {\n    width: 90,\n    height: 90,\n    type: ButtonTypes.NORMAL_BTN2,\n    title: \"20\",\n    style: {\n      marginLeft: 10,\n      marginRight: 10,\n      flex: 1\n    },\n    onPress: function onPress() {\n      onChangeTime(20);\n    },\n    textStyle: {\n      fontSize: 40\n    }\n  }));\n};\nexport var styles = StyleSheet.create({\n  timingView: {\n    position: \"absolute\",\n    bottom: 0,\n    width: Dimensions.get('window').width,\n    height: 120,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 20\n  }\n});","map":{"version":3,"sources":["/Users/ethancannelongo/Desktop/React Native/Focal Point/focalpoint/src/components/Timing.js"],"names":["React","useState","useEffect","useRef","RoundedButton","ButtonTypes","Timing","onChangeTime","styles","timingView","NORMAL_BTN2","marginLeft","marginRight","flex","fontSize","StyleSheet","create","position","bottom","width","Dimensions","get","height","display","flexDirection","justifyContent","padding"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;;;AAOA,SAASC,aAAT;AACA,SAASC,WAAT;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,OAEhB;AAAA,MADJC,YACI,QADJA,YACI;AAEJ,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,KACM,oBAAC,aAAD;AACE,IAAA,KAAK,EAAE,EADT;AAEE,IAAA,MAAM,EAAE,EAFV;AAGE,IAAA,IAAI,EAAEJ,WAAW,CAACK,WAHpB;AAIE,IAAA,KAAK,EAAC,IAJR;AAKE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,EAAd;AAAkBC,MAAAA,WAAW,EAAE,EAA/B;AAAmCC,MAAAA,IAAI,EAAE;AAAzC,KALT;AAME,IAAA,OAAO,EAAE,mBAAM;AACbN,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,KARH;AASE,IAAA,SAAS,EAAE;AAAEO,MAAAA,QAAQ,EAAE;AAAZ;AATb,IADN,EAYM,oBAAC,aAAD;AACE,IAAA,KAAK,EAAE,EADT;AAEE,IAAA,MAAM,EAAE,EAFV;AAGE,IAAA,IAAI,EAAET,WAAW,CAACK,WAHpB;AAIE,IAAA,KAAK,EAAC,IAJR;AAKE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,EAAd;AAAkBC,MAAAA,WAAW,EAAE,EAA/B;AAAmCC,MAAAA,IAAI,EAAE;AAAzC,KALT;AAME,IAAA,OAAO,EAAE,mBAAM;AACbN,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,KARH;AASE,IAAA,SAAS,EAAE;AAAEO,MAAAA,QAAQ,EAAE;AAAZ;AATb,IAZN,EAuBM,oBAAC,aAAD;AACE,IAAA,KAAK,EAAE,EADT;AAEE,IAAA,MAAM,EAAE,EAFV;AAGE,IAAA,IAAI,EAAET,WAAW,CAACK,WAHpB;AAIE,IAAA,KAAK,EAAC,IAJR;AAKE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,EAAd;AAAkBC,MAAAA,WAAW,EAAE,EAA/B;AAAmCC,MAAAA,IAAI,EAAE;AAAzC,KALT;AAME,IAAA,OAAO,EAAE,mBAAM;AACbN,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,KARH;AASE,IAAA,SAAS,EAAE;AAAEO,MAAAA,QAAQ,EAAE;AAAZ;AATb,IAvBN,CADF;AAqCD,CAzCM;AA2CP,OAAO,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AACtCP,EAAAA,UAAU,EAAC;AACTQ,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAHvB;AAITG,IAAAA,MAAM,EAAE,GAJC;AAKTC,IAAAA,OAAO,EAAE,MALA;AAMTC,IAAAA,aAAa,EAAE,KANN;AAOTC,IAAAA,cAAc,EAAE,eAPP;AAQTC,IAAAA,OAAO,EAAE;AARA;AAD2B,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Dimensions\n} from 'react-native';\nimport { RoundedButton } from '../components/RoundedButton';\nimport { ButtonTypes } from '../utils/constants/ButtonTypes';\n\nexport const Timing = ({\n  onChangeTime\n}) => {\n  \n  return(\n    <View style={styles.timingView}>\n          <RoundedButton\n            width={90}\n            height={90}\n            type={ButtonTypes.NORMAL_BTN2}\n            title=\"10\"\n            style={{ marginLeft: 10, marginRight: 10, flex: 1 }}\n            onPress={() => {\n              onChangeTime(10);\n            }}\n            textStyle={{ fontSize: 40 }}\n          />\n          <RoundedButton\n            width={90}\n            height={90}\n            type={ButtonTypes.NORMAL_BTN2}\n            title=\"15\"\n            style={{ marginLeft: 10, marginRight: 10, flex: 1 }}\n            onPress={() => {\n              onChangeTime(15);\n            }}\n            textStyle={{ fontSize: 40 }}\n          />\n          <RoundedButton\n            width={90}\n            height={90}\n            type={ButtonTypes.NORMAL_BTN2}\n            title=\"20\"\n            style={{ marginLeft: 10, marginRight: 10, flex: 1 }}\n            onPress={() => {\n              onChangeTime(20);\n            }}\n            textStyle={{ fontSize: 40 }}\n          />\n        </View>\n  )\n}\n\nexport const styles = StyleSheet.create({\n  timingView:{\n    position: \"absolute\",\n    bottom: 0,\n    width: Dimensions.get('window').width,\n    height: 120,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 20,\n  },\n})"]},"metadata":{},"sourceType":"module"}