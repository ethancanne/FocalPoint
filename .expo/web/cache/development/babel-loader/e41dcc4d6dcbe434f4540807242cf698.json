{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { statuses } from \"../utils/constants/Statuses\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { colors } from \"../utils/Colors\";\nexport var FocusHistoryItem = function FocusHistoryItem(_ref) {\n  var subject = _ref.subject,\n      status = _ref.status,\n      addSubject = _ref.addSubject,\n      index = _ref.index,\n      focusHistory = _ref.focusHistory;\n  return React.createElement(TouchableOpacity, {\n    style: styles.listItem,\n    disabled: status === 1,\n    onPress: function onPress() {\n      console.log(focusHistory[index].minutesLeft);\n      addSubject(subject, focusHistory[index].minutes);\n      focusHistory.splice(index, 1);\n    }\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: status === statuses.COMPLETE ? styles.completeSubjectTxt : styles.cancelledSubjectTxt\n  }, subject), status === statuses.CANCELLED && React.createElement(Text, {\n    style: styles.timeRemainingTxt\n  }, focusHistory[index].minutesLeft, \" Remaining\")), React.createElement(View, {\n    style: {\n      justifyContent: 'center'\n    }\n  }, status == statuses.COMPLETE ? React.createElement(Ionicons, {\n    name: \"md-checkmark-circle\",\n    size: 32,\n    color: \"#8FA87F\"\n  }) : React.createElement(Ionicons, {\n    name: \"md-time-sharp\",\n    size: 32,\n    color: \"#A60000\"\n  })));\n};\nvar styles = StyleSheet.create({\n  listItem: {\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    backgroundColor: colors.lightSecondary,\n    padding: 20,\n    margin: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 2,\n      height: 4\n    },\n    shadowOpacity: 0.05,\n    shadowRadius: 3\n  },\n  completeSubjectTxt: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#8FA87F'\n  },\n  cancelledSubjectTxt: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#A60000'\n  },\n  timeRemainingTxt: {\n    fontWeight: \"bold\",\n    color: \"#A60000\"\n  }\n});","map":{"version":3,"sources":["/Users/ethancannelongo/Desktop/React Native/Focal Point/focalpoint/src/components/FocusHistoryItem.js"],"names":["React","useState","useEffect","statuses","Ionicons","colors","FocusHistoryItem","subject","status","addSubject","index","focusHistory","styles","listItem","console","log","minutesLeft","minutes","splice","COMPLETE","completeSubjectTxt","cancelledSubjectTxt","CANCELLED","timeRemainingTxt","justifyContent","StyleSheet","create","flexDirection","backgroundColor","lightSecondary","padding","margin","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","fontSize","fontWeight","color"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,QAAT;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,MAAT;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA0D;AAAA,MAAvDC,OAAuD,QAAvDA,OAAuD;AAAA,MAA9CC,MAA8C,QAA9CA,MAA8C;AAAA,MAAtCC,UAAsC,QAAtCA,UAAsC;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AACxF,SACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEC,MAAM,CAACC,QADhB;AAEE,IAAA,QAAQ,EAAEL,MAAM,KAAK,CAFvB;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbM,MAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAY,CAACD,KAAD,CAAZ,CAAoBM,WAAhC;AACAP,MAAAA,UAAU,CAACF,OAAD,EAAUI,YAAY,CAACD,KAAD,CAAZ,CAAoBO,OAA9B,CAAV;AACAN,MAAAA,YAAY,CAACO,MAAb,CAAoBR,KAApB,EAA0B,CAA1B;AACD;AAPH,KAQE,oBAAC,IAAD,QACE,oBAAC,IAAD;AACE,IAAA,KAAK,EACHF,MAAM,KAAKL,QAAQ,CAACgB,QAApB,GACIP,MAAM,CAACQ,kBADX,GAEIR,MAAM,CAACS;AAJf,KAMGd,OANH,CADF,EASIC,MAAM,KAAKL,QAAQ,CAACmB,SAApB,IACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW;AAApB,KACKZ,YAAY,CAACD,KAAD,CAAZ,CAAoBM,WADzB,eAVJ,CARF,EAwBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEQ,MAAAA,cAAc,EAAE;AAAlB;AAAb,KACGhB,MAAM,IAAIL,QAAQ,CAACgB,QAAnB,GACC,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,qBAAf;AAAqC,IAAA,IAAI,EAAE,EAA3C;AAA+C,IAAA,KAAK,EAAC;AAArD,IADD,GAGC,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,eAAf;AAA+B,IAAA,IAAI,EAAE,EAArC;AAAyC,IAAA,KAAK,EAAC;AAA/C,IAJJ,CAxBF,CADF;AAkCD,CAnCM;AAqCP,IAAMP,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,QAAQ,EAAE;AACRW,IAAAA,cAAc,EAAE,eADR;AAERG,IAAAA,aAAa,EAAE,KAFP;AAGRC,IAAAA,eAAe,EAAEvB,MAAM,CAACwB,cAHhB;AAIRC,IAAAA,OAAO,EAAE,EAJD;AAKRC,IAAAA,MAAM,EAAE,EALA;AAMRC,IAAAA,WAAW,EAAE,OANL;AAORC,IAAAA,YAAY,EAAE;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAPN;AAQRC,IAAAA,aAAa,EAAE,IARP;AASRC,IAAAA,YAAY,EAAE;AATN,GADqB;AAY/BjB,EAAAA,kBAAkB,EAAE;AAClBkB,IAAAA,QAAQ,EAAE,EADQ;AAElBC,IAAAA,UAAU,EAAE,MAFM;AAGlBC,IAAAA,KAAK,EAAE;AAHW,GAZW;AAiB/BnB,EAAAA,mBAAmB,EAAE;AACnBiB,IAAAA,QAAQ,EAAE,EADS;AAEnBC,IAAAA,UAAU,EAAE,MAFO;AAGnBC,IAAAA,KAAK,EAAE;AAHY,GAjBU;AAsB/BjB,EAAAA,gBAAgB,EAAC;AACfgB,IAAAA,UAAU,EAAE,MADG;AAEfC,IAAAA,KAAK,EAAE;AAFQ;AAtBc,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, StyleSheet, TouchableOpacity } from 'react-native';\nimport { statuses } from '../utils/constants/Statuses';\nimport { Ionicons } from '@expo/vector-icons';\nimport { colors } from '../utils/Colors';\n\nexport const FocusHistoryItem = ({ subject, status, addSubject, index, focusHistory }) => {\n  return (\n    <TouchableOpacity\n      style={styles.listItem}\n      disabled={status === 1}\n      onPress={() => {\n        console.log(focusHistory[index].minutesLeft)\n        addSubject(subject, focusHistory[index].minutes);\n        focusHistory.splice(index,1)\n      }}>\n      <View>\n        <Text\n          style={\n            status === statuses.COMPLETE\n              ? styles.completeSubjectTxt\n              : styles.cancelledSubjectTxt\n          }>\n          {subject}\n        </Text>\n        { status === statuses.CANCELLED &&\n          <Text style={styles.timeRemainingTxt}>\n              {focusHistory[index].minutesLeft} Remaining\n          </Text>\n        }\n      </View>\n\n      <View style={{ justifyContent: 'center' }}>\n        {status == statuses.COMPLETE ? (\n          <Ionicons name=\"md-checkmark-circle\" size={32} color=\"#8FA87F\" />\n        ) : (\n          <Ionicons name=\"md-time-sharp\" size={32} color=\"#A60000\" />\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  listItem: {\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    backgroundColor: colors.lightSecondary,\n    padding: 20,\n    margin: 10,\n    shadowColor: 'black',\n    shadowOffset: { width: 2, height: 4 },\n    shadowOpacity: 0.05,\n    shadowRadius: 3,\n  },\n  completeSubjectTxt: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#8FA87F',\n  },\n  cancelledSubjectTxt: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#A60000',\n  },\n  timeRemainingTxt:{\n    fontWeight: \"bold\",\n    color: \"#A60000\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}